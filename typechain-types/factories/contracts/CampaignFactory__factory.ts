/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  CampaignFactory,
  CampaignFactoryInterface,
} from "../../contracts/CampaignFactory";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "CampaignImplementationUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "new_fee",
        type: "uint16",
      },
    ],
    name: "FeeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "campaign",
        type: "address",
      },
    ],
    name: "NewCampaign",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "enum ICampaign.Dex",
        name: "dex",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "address",
        name: "new_router",
        type: "address",
      },
    ],
    name: "RouterUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "campaignImplementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "campaigns",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "contract IERC20",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "start",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "end",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "presaleTokens",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquidityTokens",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minPurchaseBnb",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPurchaseBnb",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "softCap",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokensPerBnb",
            type: "uint256",
          },
          {
            internalType: "enum ICampaign.Dex",
            name: "dex",
            type: "uint8",
          },
          {
            internalType: "enum ICampaign.UnsoldTokensAction",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "uint16",
            name: "liquidityPercent",
            type: "uint16",
          },
          {
            internalType: "uint32",
            name: "liquidityLockupPeriod",
            type: "uint32",
          },
        ],
        internalType: "struct ICampaign.Config",
        name: "config",
        type: "tuple",
      },
    ],
    name: "createCampaign",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        components: [
          {
            internalType: "contract IERC20",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "start",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "end",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "presaleTokens",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquidityTokens",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minPurchaseBnb",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPurchaseBnb",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "softCap",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokensPerBnb",
            type: "uint256",
          },
          {
            internalType: "enum ICampaign.Dex",
            name: "dex",
            type: "uint8",
          },
          {
            internalType: "enum ICampaign.UnsoldTokensAction",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "uint16",
            name: "liquidityPercent",
            type: "uint16",
          },
          {
            internalType: "uint32",
            name: "liquidityLockupPeriod",
            type: "uint32",
          },
        ],
        internalType: "struct ICampaign.Config",
        name: "config",
        type: "tuple",
      },
    ],
    name: "createCampaignWithOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "fee",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "getCampaignList",
    outputs: [
      {
        internalType: "address[]",
        name: "_campaigns",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_raised",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_campaignImplementation",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "_fee",
        type: "uint16",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum ICampaign.Dex",
        name: "",
        type: "uint8",
      },
    ],
    name: "routers",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "new_fee",
        type: "uint16",
      },
    ],
    name: "setFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum ICampaign.Dex",
        name: "dex",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "new_router",
        type: "address",
      },
    ],
    name: "setRouter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "updateCampaignImplementation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611a5d806100206000396000f3fe6080604052600436106100ec5760003560e01c806377321c581161008a578063bd9c7f5111610059578063bd9c7f51146102b7578063ddca3f43146102fa578063e4b58cdc14610328578063f2fde38b1461034857600080fd5b806377321c581461022c5780637ebef5291461024c5780638da5cb5b1461026c5780638e0055531461029757600080fd5b80634dd96849116100c65780634dd968491461019c57806352474f71146101bc57806362a6e065146101ea578063715018a61461021757600080fd5b8063141961bc146100f85780632df36a06146101655780633ccfd60b1461018757600080fd5b366100f357005b600080fd5b34801561010457600080fd5b5061013b610113366004611394565b60666020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b34801561017157600080fd5b506101856101803660046113c6565b610368565b005b34801561019357600080fd5b50610185610377565b3480156101a857600080fd5b506101856101b7366004611416565b6103ae565b3480156101c857600080fd5b506101dc6101d7366004611485565b6103be565b60405161015c929190611561565b3480156101f657600080fd5b5060655461013b9073ffffffffffffffffffffffffffffffffffffffff1681565b34801561022357600080fd5b506101856105fe565b34801561023857600080fd5b506101856102473660046115f2565b610612565b34801561025857600080fd5b50610185610267366004611628565b610623565b34801561027857600080fd5b5060335473ffffffffffffffffffffffffffffffffffffffff1661013b565b3480156102a357600080fd5b506101856102b2366004611666565b6107db565b3480156102c357600080fd5b5061013b6102d2366004611690565b60676020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b34801561030657600080fd5b506068546103159061ffff1681565b60405161ffff909116815260200161015c565b34801561033457600080fd5b506101856103433660046116ab565b6108a1565b34801561035457600080fd5b506101856103633660046115f2565b61095a565b6103738233836109f4565b5050565b61037f611195565b60405133904780156108fc02916000818181858888f193505050501580156103ab573d6000803e3d6000fd5b50565b6103b98383836109f4565b505050565b606080825167ffffffffffffffff8111156103db576103db611456565b604051908082528060200260200182016040528015610404578160200160208202803683370190505b509150825167ffffffffffffffff81111561042157610421611456565b60405190808252806020026020018201604052801561044a578160200160208202803683370190505b50905060005b83518110156105f8576066600085838151811061046f5761046f6116e2565b6020026020010151815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168382815181106104b8576104b86116e2565b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600073ffffffffffffffffffffffffffffffffffffffff1683828151811061051c5761051c6116e2565b602002602001015173ffffffffffffffffffffffffffffffffffffffff16146105e657828181518110610551576105516116e2565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1663f0ea4bfc6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c79190611711565b8282815181106105d9576105d96116e2565b6020026020010181815250505b806105f081611759565b915050610450565b50915091565b610606611195565b61061060006111fc565b565b61061a611195565b6103ab81611273565b600054610100900460ff16158080156106435750600054600160ff909116105b8061065d5750303b15801561065d575060005460ff166001145b6106d45760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084015b60405180910390fd5b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055801561073257600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b61073b846111fc565b61074483611273565b606880547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001661ffff841617905580156107d557600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b6107e3611195565b61271061ffff821611156108395760405162461bcd60e51b815260206004820181905260248201527f43616d706169676e466163746f72793a3a7365744665653a206261642066656560448201526064016106cb565b606880547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001661ffff83169081179091556040519081527fc8fcf8ee1425e7e60b8af83735e1eb516d5b9ef05bfd6eece552ebaeb7c75b48906020015b60405180910390a150565b6108a9611195565b80606760008460028111156108c0576108c0611791565b60028111156108d1576108d1611791565b815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fed739f5df64012854c2039ba144af8e3af26211fc7f10a959c6a592ae58c4491828260405161094e9291906117d4565b60405180910390a15050565b610962611195565b73ffffffffffffffffffffffffffffffffffffffff81166109eb5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016106cb565b6103ab816111fc565b60008381526066602052604090205473ffffffffffffffffffffffffffffffffffffffff1615610a8c5760405162461bcd60e51b815260206004820152603360248201527f43616d706169676e466163746f72793a3a63726561746543616d706169676e3a60448201527f20696420697320616c726561647920757365640000000000000000000000000060648201526084016106cb565b42610a9d6040830160208401611819565b63ffffffff1611610b165760405162461bcd60e51b815260206004820152603a60248201527f43616d706169676e466163746f72793a3a63726561746543616d706169676e3a60448201527f2073746172742073686f756c6420626520696e2066757475726500000000000060648201526084016106cb565b610b266060820160408301611819565b63ffffffff16610b3c6040830160208401611819565b63ffffffff1610610bdb5760405162461bcd60e51b815260206004820152604960248201527f43616d706169676e466163746f72793a3a63726561746543616d706169676e3a60448201527f207374617274207374696d652073686f756c64206265206c657373207468616e60648201527f20656e642074696d650000000000000000000000000000000000000000000000608482015260a4016106cb565b8060c001358160a0013510610c7e5760405162461bcd60e51b815260206004820152604c60248201527f43616d706169676e466163746f72793a3a63726561746543616d706169676e3a60448201527f206d696e50757263686173652073686f756c64206265206c657373207468616e60648201527f206d617850757263686173650000000000000000000000000000000000000000608482015260a4016106cb565b60008160800135118015610c96575060008160600135115b610d2e5760405162461bcd60e51b815260206004820152604160248201527f43616d706169676e466163746f72793a3a63726561746543616d706169676e3a60448201527f20746f6b656e20616d6f756e74732073686f756c6420626520706f736974697660648201527f6500000000000000000000000000000000000000000000000000000000000000608482015260a4016106cb565b600081610100013511610da95760405162461bcd60e51b815260206004820152603860248201527f43616d706169676e466163746f72793a3a63726561746543616d706169676e3a60448201527f20726174652073686f756c6420626520706f736974697665000000000000000060648201526084016106cb565b612710610dbe61018083016101608401611666565b61ffff1610610e5b5760405162461bcd60e51b815260206004820152604b60248201527f43616d706169676e466163746f72793a3a63726561746543616d706169676e3a60448201527f206c697175696469747950657263656e742073686f756c64206265206c65737360648201527f207468616e203130303030000000000000000000000000000000000000000000608482015260a4016106cb565b610100810135610e776060830135670de0b6b3a7640000611834565b610e819190611871565b8160e0013510610f205760405162461bcd60e51b8152602060048201526044602482018190527f43616d706169676e466163746f72793a3a63726561746543616d706169676e3a908201527f20736f66744361702073686f756c64206265206c657373207468656e2068617260648201527f6443617000000000000000000000000000000000000000000000000000000000608482015260a4016106cb565b6000606781610f3761014085016101208601611690565b6002811115610f4857610f48611791565b6002811115610f5957610f59611791565b815260208101919091526040016000205473ffffffffffffffffffffffffffffffffffffffff1603610ff35760405162461bcd60e51b815260206004820152603760248201527f43616d706169676e466163746f72793a3a63726561746543616d706169676e3a60448201527f20726f75746572206e6f742073657420666f722064657800000000000000000060648201526084016106cb565b6065546000906110189073ffffffffffffffffffffffffffffffffffffffff166112e6565b60685490915073ffffffffffffffffffffffffffffffffffffffff82169063ecb2de2290859061ffff166067600061105861014089016101208a01611690565b600281111561106957611069611791565b600281111561107a5761107a611791565b8152602081019190915260409081016000205490517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b1681526110df93929173ffffffffffffffffffffffffffffffffffffffff169088906004016118d6565b600060405180830381600087803b1580156110f957600080fd5b505af115801561110d573d6000803e3d6000fd5b50505060008581526066602052604080822080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff868116918217909255915191935086169187917fa24b0e4a12c33da7b4a0159676334515bdb125dea1a8df8b34bdfe67978e19a79190a450505050565b60335473ffffffffffffffffffffffffffffffffffffffff1633146106105760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106cb565b6033805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b606580547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040519081527f95313cc18a2e51d6c85b1d83ee8b662363af2db692bab49a1db7f3fe354aa0a290602001610896565b6000763d602d80600a3d3981f3363d3d373d3d3d363d730000008260601b60e81c176000526e5af43d82803e903d91602b57fd5bf38260781b17602052603760096000f0905073ffffffffffffffffffffffffffffffffffffffff811661138f5760405162461bcd60e51b815260206004820152601660248201527f455243313136373a20637265617465206661696c65640000000000000000000060448201526064016106cb565b919050565b6000602082840312156113a657600080fd5b5035919050565b60006101a082840312156113c057600080fd5b50919050565b6000806101c083850312156113da57600080fd5b823591506113eb84602085016113ad565b90509250929050565b73ffffffffffffffffffffffffffffffffffffffff811681146103ab57600080fd5b60008060006101e0848603121561142c57600080fd5b83359250602084013561143e816113f4565b915061144d85604086016113ad565b90509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000602080838503121561149857600080fd5b823567ffffffffffffffff808211156114b057600080fd5b818501915085601f8301126114c457600080fd5b8135818111156114d6576114d6611456565b8060051b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f8301168101818110858211171561151957611519611456565b60405291825284820192508381018501918883111561153757600080fd5b938501935b828510156115555784358452938501939285019261153c565b98975050505050505050565b604080825283519082018190526000906020906060840190828701845b828110156115b057815173ffffffffffffffffffffffffffffffffffffffff168452928401929084019060010161157e565b5050508381038285015284518082528583019183019060005b818110156115e5578351835292840192918401916001016115c9565b5090979650505050505050565b60006020828403121561160457600080fd5b813561160f816113f4565b9392505050565b803561ffff8116811461138f57600080fd5b60008060006060848603121561163d57600080fd5b8335611648816113f4565b92506020840135611658816113f4565b915061144d60408501611616565b60006020828403121561167857600080fd5b61160f82611616565b80356003811061138f57600080fd5b6000602082840312156116a257600080fd5b61160f82611681565b600080604083850312156116be57600080fd5b6116c783611681565b915060208301356116d7816113f4565b809150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006020828403121561172357600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361178a5761178a61172a565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600381106117d0576117d0611791565b9052565b604081016117e282856117c0565b73ffffffffffffffffffffffffffffffffffffffff831660208301529392505050565b803563ffffffff8116811461138f57600080fd5b60006020828403121561182b57600080fd5b61160f82611805565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561186c5761186c61172a565b500290565b6000826118a7577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b803561138f816113f4565b80356002811061138f57600080fd5b600281106117d0576117d0611791565b73ffffffffffffffffffffffffffffffffffffffff858116825261ffff8516602083015283166040820152610200810161193060608301611916856118ac565b73ffffffffffffffffffffffffffffffffffffffff169052565b61193c60208401611805565b63ffffffff16608083015261195360408401611805565b63ffffffff811660a084015250606083013560c0830152608083013560e083015261010060a08401358184015261012060c08501358185015261014060e08601358186015261016083870135818701526119ae838801611681565b935061018092506119c1838701856117c0565b6119cc8288016118b7565b93506119dc6101a08701856118c6565b6119e7818801611616565b935050506119fc6101c085018361ffff169052565b611a07818601611805565b915050611a1d6101e084018263ffffffff169052565b509594505050505056fea26469706673582212201cdaf3c84dbf705aab30fbde34f0fd7dc77534d557ebd877fd90ea75c0948ae864736f6c634300080d0033";

type CampaignFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CampaignFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CampaignFactory__factory extends ContractFactory {
  constructor(...args: CampaignFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CampaignFactory> {
    return super.deploy(overrides || {}) as Promise<CampaignFactory>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CampaignFactory {
    return super.attach(address) as CampaignFactory;
  }
  override connect(signer: Signer): CampaignFactory__factory {
    return super.connect(signer) as CampaignFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CampaignFactoryInterface {
    return new utils.Interface(_abi) as CampaignFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CampaignFactory {
    return new Contract(address, _abi, signerOrProvider) as CampaignFactory;
  }
}
