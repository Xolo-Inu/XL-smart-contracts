/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  CampaignFactory,
  CampaignFactoryInterface,
} from "../../contracts/CampaignFactory";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "CampaignImplementationUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "new_fee",
        type: "uint16",
      },
    ],
    name: "FeeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "campaign",
        type: "address",
      },
    ],
    name: "NewCampaign",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "enum ICampaign.Dex",
        name: "dex",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "address",
        name: "new_router",
        type: "address",
      },
    ],
    name: "RouterUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "campaignImplementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "campaigns",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "contract IERC20",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "start",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "end",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "presaleTokens",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquidityTokens",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minPurchaseBnb",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPurchaseBnb",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "softCap",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokensPerBnb",
            type: "uint256",
          },
          {
            internalType: "enum ICampaign.Dex",
            name: "dex",
            type: "uint8",
          },
          {
            internalType: "enum ICampaign.UnsoldTokensAction",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "uint16",
            name: "liquidityPercent",
            type: "uint16",
          },
          {
            internalType: "uint32",
            name: "liquidityLockupPeriod",
            type: "uint32",
          },
        ],
        internalType: "struct ICampaign.Config",
        name: "config",
        type: "tuple",
      },
    ],
    name: "createCampaign",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        components: [
          {
            internalType: "contract IERC20",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "start",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "end",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "presaleTokens",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquidityTokens",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minPurchaseBnb",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPurchaseBnb",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "softCap",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokensPerBnb",
            type: "uint256",
          },
          {
            internalType: "enum ICampaign.Dex",
            name: "dex",
            type: "uint8",
          },
          {
            internalType: "enum ICampaign.UnsoldTokensAction",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "uint16",
            name: "liquidityPercent",
            type: "uint16",
          },
          {
            internalType: "uint32",
            name: "liquidityLockupPeriod",
            type: "uint32",
          },
        ],
        internalType: "struct ICampaign.Config",
        name: "config",
        type: "tuple",
      },
    ],
    name: "createCampaignWithOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "fee",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "getCampaignList",
    outputs: [
      {
        internalType: "address[]",
        name: "_campaigns",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_raised",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_campaignImplementation",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "_fee",
        type: "uint16",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum ICampaign.Dex",
        name: "",
        type: "uint8",
      },
    ],
    name: "routers",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "new_fee",
        type: "uint16",
      },
    ],
    name: "setFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum ICampaign.Dex",
        name: "dex",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "new_router",
        type: "address",
      },
    ],
    name: "setRouter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "updateCampaignImplementation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611a65806100206000396000f3fe6080604052600436106100ec5760003560e01c806377321c581161008a578063bd9c7f5111610059578063bd9c7f51146102b7578063ddca3f43146102fa578063e4b58cdc14610328578063f2fde38b1461034857600080fd5b806377321c581461022c5780637ebef5291461024c5780638da5cb5b1461026c5780638e0055531461029757600080fd5b80634dd96849116100c65780634dd968491461019c57806352474f71146101bc57806362a6e065146101ea578063715018a61461021757600080fd5b8063141961bc146100f85780632df36a06146101655780633ccfd60b1461018757600080fd5b366100f357005b600080fd5b34801561010457600080fd5b5061013b61011336600461139c565b60666020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b34801561017157600080fd5b506101856101803660046113ce565b610368565b005b34801561019357600080fd5b50610185610377565b3480156101a857600080fd5b506101856101b736600461141e565b6103ae565b3480156101c857600080fd5b506101dc6101d736600461148d565b6103c6565b60405161015c929190611569565b3480156101f657600080fd5b5060655461013b9073ffffffffffffffffffffffffffffffffffffffff1681565b34801561022357600080fd5b50610185610606565b34801561023857600080fd5b506101856102473660046115fa565b61061a565b34801561025857600080fd5b50610185610267366004611630565b61062b565b34801561027857600080fd5b5060335473ffffffffffffffffffffffffffffffffffffffff1661013b565b3480156102a357600080fd5b506101856102b236600461166e565b6107e3565b3480156102c357600080fd5b5061013b6102d2366004611698565b60676020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b34801561030657600080fd5b506068546103159061ffff1681565b60405161ffff909116815260200161015c565b34801561033457600080fd5b506101856103433660046116b3565b6108a9565b34801561035457600080fd5b506101856103633660046115fa565b610962565b6103738233836109fc565b5050565b61037f61119d565b60405133904780156108fc02916000818181858888f193505050501580156103ab573d6000803e3d6000fd5b50565b6103b661119d565b6103c18383836109fc565b505050565b606080825167ffffffffffffffff8111156103e3576103e361145e565b60405190808252806020026020018201604052801561040c578160200160208202803683370190505b509150825167ffffffffffffffff8111156104295761042961145e565b604051908082528060200260200182016040528015610452578160200160208202803683370190505b50905060005b83518110156106005760666000858381518110610477576104776116ea565b6020026020010151815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168382815181106104c0576104c06116ea565b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600073ffffffffffffffffffffffffffffffffffffffff16838281518110610524576105246116ea565b602002602001015173ffffffffffffffffffffffffffffffffffffffff16146105ee57828181518110610559576105596116ea565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1663f0ea4bfc6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105cf9190611719565b8282815181106105e1576105e16116ea565b6020026020010181815250505b806105f881611761565b915050610458565b50915091565b61060e61119d565b6106186000611204565b565b61062261119d565b6103ab8161127b565b600054610100900460ff161580801561064b5750600054600160ff909116105b806106655750303b158015610665575060005460ff166001145b6106dc5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084015b60405180910390fd5b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055801561073a57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b61074384611204565b61074c8361127b565b606880547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001661ffff841617905580156107dd57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b6107eb61119d565b61271061ffff821611156108415760405162461bcd60e51b815260206004820181905260248201527f43616d706169676e466163746f72793a3a7365744665653a206261642066656560448201526064016106d3565b606880547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001661ffff83169081179091556040519081527fc8fcf8ee1425e7e60b8af83735e1eb516d5b9ef05bfd6eece552ebaeb7c75b48906020015b60405180910390a150565b6108b161119d565b80606760008460028111156108c8576108c8611799565b60028111156108d9576108d9611799565b815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fed739f5df64012854c2039ba144af8e3af26211fc7f10a959c6a592ae58c449182826040516109569291906117dc565b60405180910390a15050565b61096a61119d565b73ffffffffffffffffffffffffffffffffffffffff81166109f35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016106d3565b6103ab81611204565b60008381526066602052604090205473ffffffffffffffffffffffffffffffffffffffff1615610a945760405162461bcd60e51b815260206004820152603360248201527f43616d706169676e466163746f72793a3a63726561746543616d706169676e3a60448201527f20696420697320616c726561647920757365640000000000000000000000000060648201526084016106d3565b42610aa56040830160208401611821565b63ffffffff1611610b1e5760405162461bcd60e51b815260206004820152603a60248201527f43616d706169676e466163746f72793a3a63726561746543616d706169676e3a60448201527f2073746172742073686f756c6420626520696e2066757475726500000000000060648201526084016106d3565b610b2e6060820160408301611821565b63ffffffff16610b446040830160208401611821565b63ffffffff1610610be35760405162461bcd60e51b815260206004820152604960248201527f43616d706169676e466163746f72793a3a63726561746543616d706169676e3a60448201527f207374617274207374696d652073686f756c64206265206c657373207468616e60648201527f20656e642074696d650000000000000000000000000000000000000000000000608482015260a4016106d3565b8060c001358160a0013510610c865760405162461bcd60e51b815260206004820152604c60248201527f43616d706169676e466163746f72793a3a63726561746543616d706169676e3a60448201527f206d696e50757263686173652073686f756c64206265206c657373207468616e60648201527f206d617850757263686173650000000000000000000000000000000000000000608482015260a4016106d3565b60008160800135118015610c9e575060008160600135115b610d365760405162461bcd60e51b815260206004820152604160248201527f43616d706169676e466163746f72793a3a63726561746543616d706169676e3a60448201527f20746f6b656e20616d6f756e74732073686f756c6420626520706f736974697660648201527f6500000000000000000000000000000000000000000000000000000000000000608482015260a4016106d3565b600081610100013511610db15760405162461bcd60e51b815260206004820152603860248201527f43616d706169676e466163746f72793a3a63726561746543616d706169676e3a60448201527f20726174652073686f756c6420626520706f736974697665000000000000000060648201526084016106d3565b612710610dc66101808301610160840161166e565b61ffff1610610e635760405162461bcd60e51b815260206004820152604b60248201527f43616d706169676e466163746f72793a3a63726561746543616d706169676e3a60448201527f206c697175696469747950657263656e742073686f756c64206265206c65737360648201527f207468616e203130303030000000000000000000000000000000000000000000608482015260a4016106d3565b610100810135610e7f6060830135670de0b6b3a764000061183c565b610e899190611879565b8160e0013510610f285760405162461bcd60e51b8152602060048201526044602482018190527f43616d706169676e466163746f72793a3a63726561746543616d706169676e3a908201527f20736f66744361702073686f756c64206265206c657373207468656e2068617260648201527f6443617000000000000000000000000000000000000000000000000000000000608482015260a4016106d3565b6000606781610f3f61014085016101208601611698565b6002811115610f5057610f50611799565b6002811115610f6157610f61611799565b815260208101919091526040016000205473ffffffffffffffffffffffffffffffffffffffff1603610ffb5760405162461bcd60e51b815260206004820152603760248201527f43616d706169676e466163746f72793a3a63726561746543616d706169676e3a60448201527f20726f75746572206e6f742073657420666f722064657800000000000000000060648201526084016106d3565b6065546000906110209073ffffffffffffffffffffffffffffffffffffffff166112ee565b60685490915073ffffffffffffffffffffffffffffffffffffffff82169063ecb2de2290859061ffff166067600061106061014089016101208a01611698565b600281111561107157611071611799565b600281111561108257611082611799565b8152602081019190915260409081016000205490517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b1681526110e793929173ffffffffffffffffffffffffffffffffffffffff169088906004016118de565b600060405180830381600087803b15801561110157600080fd5b505af1158015611115573d6000803e3d6000fd5b50505060008581526066602052604080822080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff868116918217909255915191935086169187917fa24b0e4a12c33da7b4a0159676334515bdb125dea1a8df8b34bdfe67978e19a79190a450505050565b60335473ffffffffffffffffffffffffffffffffffffffff1633146106185760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106d3565b6033805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b606580547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040519081527f95313cc18a2e51d6c85b1d83ee8b662363af2db692bab49a1db7f3fe354aa0a29060200161089e565b6000763d602d80600a3d3981f3363d3d373d3d3d363d730000008260601b60e81c176000526e5af43d82803e903d91602b57fd5bf38260781b17602052603760096000f0905073ffffffffffffffffffffffffffffffffffffffff81166113975760405162461bcd60e51b815260206004820152601660248201527f455243313136373a20637265617465206661696c65640000000000000000000060448201526064016106d3565b919050565b6000602082840312156113ae57600080fd5b5035919050565b60006101a082840312156113c857600080fd5b50919050565b6000806101c083850312156113e257600080fd5b823591506113f384602085016113b5565b90509250929050565b73ffffffffffffffffffffffffffffffffffffffff811681146103ab57600080fd5b60008060006101e0848603121561143457600080fd5b833592506020840135611446816113fc565b915061145585604086016113b5565b90509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600060208083850312156114a057600080fd5b823567ffffffffffffffff808211156114b857600080fd5b818501915085601f8301126114cc57600080fd5b8135818111156114de576114de61145e565b8060051b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f830116810181811085821117156115215761152161145e565b60405291825284820192508381018501918883111561153f57600080fd5b938501935b8285101561155d57843584529385019392850192611544565b98975050505050505050565b604080825283519082018190526000906020906060840190828701845b828110156115b857815173ffffffffffffffffffffffffffffffffffffffff1684529284019290840190600101611586565b5050508381038285015284518082528583019183019060005b818110156115ed578351835292840192918401916001016115d1565b5090979650505050505050565b60006020828403121561160c57600080fd5b8135611617816113fc565b9392505050565b803561ffff8116811461139757600080fd5b60008060006060848603121561164557600080fd5b8335611650816113fc565b92506020840135611660816113fc565b91506114556040850161161e565b60006020828403121561168057600080fd5b6116178261161e565b80356003811061139757600080fd5b6000602082840312156116aa57600080fd5b61161782611689565b600080604083850312156116c657600080fd5b6116cf83611689565b915060208301356116df816113fc565b809150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006020828403121561172b57600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361179257611792611732565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600381106117d8576117d8611799565b9052565b604081016117ea82856117c8565b73ffffffffffffffffffffffffffffffffffffffff831660208301529392505050565b803563ffffffff8116811461139757600080fd5b60006020828403121561183357600080fd5b6116178261180d565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561187457611874611732565b500290565b6000826118af577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b8035611397816113fc565b80356002811061139757600080fd5b600281106117d8576117d8611799565b73ffffffffffffffffffffffffffffffffffffffff858116825261ffff851660208301528316604082015261020081016119386060830161191e856118b4565b73ffffffffffffffffffffffffffffffffffffffff169052565b6119446020840161180d565b63ffffffff16608083015261195b6040840161180d565b63ffffffff811660a084015250606083013560c0830152608083013560e083015261010060a08401358184015261012060c08501358185015261014060e08601358186015261016083870135818701526119b6838801611689565b935061018092506119c9838701856117c8565b6119d48288016118bf565b93506119e46101a08701856118ce565b6119ef81880161161e565b93505050611a046101c085018361ffff169052565b611a0f81860161180d565b915050611a256101e084018263ffffffff169052565b509594505050505056fea2646970667358221220f71df3e0db7e99490720e576d0beddf876c1d85d752b50995db0f788909473a464736f6c634300080d0033";

type CampaignFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CampaignFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CampaignFactory__factory extends ContractFactory {
  constructor(...args: CampaignFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CampaignFactory> {
    return super.deploy(overrides || {}) as Promise<CampaignFactory>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CampaignFactory {
    return super.attach(address) as CampaignFactory;
  }
  override connect(signer: Signer): CampaignFactory__factory {
    return super.connect(signer) as CampaignFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CampaignFactoryInterface {
    return new utils.Interface(_abi) as CampaignFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CampaignFactory {
    return new Contract(address, _abi, signerOrProvider) as CampaignFactory;
  }
}
